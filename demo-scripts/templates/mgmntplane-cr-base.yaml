---
apiVersion: install.tetrate.io/v1alpha1
kind: ManagementPlane
metadata:
  namespace: tsb
  name: tsbmgmtplane
spec:
  hub: $REPO_MP
  organization: $ORG
  dataStore:
    postgres:
      address: $(kubectl -n tsb get secrets tsb-pguser-tsb -o go-template='{{.data.host | base64decode}}'):$(kubectl -n tsb get secrets tsb-pguser-tsb -o go-template='{{.data.port | base64decode}}')
      name: $(kubectl -n tsb get secrets tsb-pguser-tsb -o go-template='{{.data.dbname | base64decode}}')
      sslMode: disable
  telemetryStore:
    elastic:
      host: $(kubectl -n tsb get svc tsb-es-http -o go-template='{{.metadata.name}}')
      port: 9200
      protocol: https
      selfSigned: true
      version: 7
  components:
    oap:
      kubeSpec:
        overlays:
        - apiVersion: apps/v1
          kind: Deployment
          name: oap
          patches:
          - path: spec.template.spec.initContainers.[name:pem-to-truststore].args
            value:
              - -c
              - |
                cd /tmp
                cat /var/run/secrets/elasticsearch.io/ca.crt | awk '/BEGIN/,/END/{ if(/BEGIN/){a++}; out="cert"a".pem"; print >out}'
                for file in cert*.pem; do
                keytool -import -noprompt -keystore $TRUSTSTORE_JKS -file $file -storepass $PASSWORD -alias service-$file
                done
    zipkin:
      kubeSpec:
        overlays:
        - apiVersion: apps/v1
          kind: Deployment
          name: zipkin
          patches:
          - path: spec.template.spec.initContainers.[name:pem-to-truststore].args
            value:
              - -c
              - |
                cd /tmp
                cat /var/run/secrets/elasticsearch.io/ca.crt | awk '/BEGIN/,/END/{ if(/BEGIN/){a++}; out="cert"a".pem"; print >out}'
                for file in cert*.pem; do
                keytool -import -noprompt -keystore $TRUSTSTORE_JKS -file $file -storepass $PASSWORD -alias service-$file
                done